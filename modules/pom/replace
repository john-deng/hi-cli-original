#!/bin/bash
###############################################################################
# Project: hi-cli
# Description: The cross platform development toolkit - hi-cli
# Author: John Deng (john.deng@outlook.com)
#
# Copyright (c) 2014-2017 John Deng (john.deng@outlook.com)
#
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Author: John Deng (john.deng@outlook.com)
# Updated: Fri Feb 24 13:12:23 CST 2017
# module: pom
# Action: replace
###############################################################################

source ${HI_CLI_HOME}/bin/colors
source ${HI_CLI_HOME}/bin/clap
source ${HI_CLI_HOME}/bin/logging
###############################################################################
usage(){
 echo "USAGE: $0 {-n|-b|-c} <BASE_DIR> <NEW_VERSION> \n\
\t -n dry run\n\
\t -b run (perform backup)\n\
\t -c run (no backup)\n\
RETURN:\n\
\t0 if success\n\
\t1 if fails"
}
###############################################################################
function run() {
  cli="pom replace version"

  # if [ $# -lt 3 ]; then
  #   echo "No arguments!"
  #   usage;
  #   exit 1;
  # fi

  # if [ -d $2 ]; then
  #   BASE_DIR=$2;
  # else
  #   echo "2nd argument is wrong (shoould be an existing dir): $3"
  #   usage;
  #   exit 1;
  # fi

  NEW_VERSION=${ver};
  XML_COMMAND=xmlstarlet

  XML_COMMAND_ARGS="ed -N x=http://maven.apache.org/POM/4.0.0 \
  -u \"/x:project/x:version | /x:project/x:parent/x:version\" \
  -v \"${NEW_VERSION}\"";

  if [ "${dry}" = "dry" ]; then
    for pom in `find $BASE_DIR -name pom.xml`; do 
      echo $XML_COMMAND_ARGS $pom|xargs $XML_COMMAND;
      if [ $? -ne 0 ]; then
        exit 1;
      fi
    done
  elif [ ${backup} = "backup" ]; then
    for pom in `find $BASE_DIR -name pom.xml`; do 
      cp -fp $pom $pom".old";
      echo $XML_COMMAND_ARGS $pom".old"|xargs $XML_COMMAND > $pom;
      if [ $? -ne 0 ]; then
        exit 1;
      fi
    done
  elif [ ${clean} = "clean" ]; then
    for pom in `find $BASE_DIR -name pom.xml`; do 
      cp -fp $pom $pom".old";
      echo $XML_COMMAND_ARGS $pom".old"|xargs $XML_COMMAND > $pom;
      if [ $? -ne 0 ]; then
        exit 1;
      fi
      rm $pom".old";
    done
  fi
  
  result=$?

  eval $1="$result"
}

###############################################################################


